import java.util.ArrayList;
import java.util.List;
import com.lottery.model.AverageTimeBetweenTwoMatchFiveDrawsResult;
import com.lottery.model.WeeklyDrawList;
import com.lottery.model.WeeklyDraw;
import java.util.Arrays;

rule "Average Time Between Two Match Five Draws"
    when
        $drawList : WeeklyDrawList()
        $result : AverageTimeBetweenTwoMatchFiveDrawsResult()
    then
        $result.setResult(findAverageTimeBetweenTwoFiveMatchDraws($drawList, $result));
    end

/*
 * Ez a method végigmegy a WeeklyDrawList-ből származó húzásokon. Ha ötös találattal találkozik. beindít egy countert
 * és a következő ötös találatig pörgeti a counter-t. Amikor újra találkozik ötös találattal, nullázza a countert.
 * Minden találatkor rögzíti az eltelt hetek számát jelző counter értékét egy listába.
 * Feltételezi, hogy a húzások időrendi sorrendben érkeznek be.
 */
function Float findAverageTimeBetweenTwoFiveMatchDraws(WeeklyDrawList drawList, AverageTimeBetweenTwoMatchFiveDrawsResult result){
       List timePassedList = new ArrayList<>();

       Integer counter = null;
       for(WeeklyDraw draw : drawList.getDrawListPreparedForDrools()){
            if( draw.getFiveMatch() != null && draw.getFiveMatch() > 0){
                if(counter == null){
                    counter = new Integer(0);
                }else{
                counter++;
                }
            }else{
                if(counter == null){
                    counter = new Integer(0);
                }
            timePassedList.add(counter);
            counter=0;
            }
       }
       return calculateAverage(timePassedList);
}

/*
 * Átlagszámítás a List-ben található Integer értékekből. A List-t a Drools miatt vagyok kénytelen generic nélkül használni.
 */
function float calculateAverage(List arr){

    float sum = 0;
    for(int n = 0; n < arr.size();n++){
    //System.out.println((Integer)arr.get(n));
        sum += (Integer)arr.get(n);
    }
    //System.out.println(sum / arr.size());
    return sum / arr.size();
}